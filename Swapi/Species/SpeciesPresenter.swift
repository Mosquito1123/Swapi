//
//  SpeciesPresenter.swift
//  Swapi
//
//  Created by TuyenLe on 7/29/19.
//  Copyright (c) 2019 TuyenLe. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import SwiftyJSON

protocol SpeciesPresentationLogic
{
    func presentSpecies(response: Species.Fetch.Response)
}

class SpeciesPresenter: SpeciesPresentationLogic
{
    weak var viewController: SpeciesDisplayLogic?
  
  // MARK: Transform data
  
    func presentSpecies(response: Species.Fetch.Response)
    {
        do {
            var speciesArray: [Specie] = []
            
            for planetData in response.species {
                if planetData == nil { continue }
                
                let json = try JSON(data: planetData!)
                for specie in json["results"] {
                    speciesArray.append(Specie(name: specie.1["name"].string!,
                                               classification: specie.1["classification"].string!,
                                               designation: specie.1["designation"].string!,
                                               averageHeight: specie.1["average_height"].string!,
                                               skinColors: specie.1["skin_colors"].string!,
                                               hairColors: specie.1["hair_colors"].string!,
                                               eyeColors: specie.1["eye_colors"].string!,
                                               averageLifespan: specie.1["average_lifespan"].string!,
                                               homeworld: nil,
                                               language: specie.1["language"].string!,
                                               people: nil,
                                               films: nil,
                                               created: specie.1["created"].string!,
                                               edited: specie.1["edited"].string!))
                }
            }
            viewController?.displaySpecies(viewModel: Species.Fetch.ViewModel(species: speciesArray))
        } catch let error {
            print("Error parsing planets: ", error)
        }
    }
}
