//
//  ListViewController.swift
//  Star Wars Index
//
//  Created by TuyenLe on 7/26/19.
//  Copyright (c) 2019 TuyenLe. All rights reserved.
//
//  Purpose: This file is for listing all starwars entities such as people,
//  films, starships, species, vehicles, planets.
//
//  Note: This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

class CharactersViewController: UITableViewController {

    // MARK: Views

    @IBOutlet weak var revealMenuBar: UIBarButtonItem!

    // MARK: Object lifecycle

    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    }

    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
    }

    // MARK: View lifecycle

    override func viewDidLoad() {
        super.viewDidLoad()
        tableView.accessibilityIdentifier = "CharactersTableView"

        if let revealVC = revealViewController() {
            revealMenuBar.target = revealVC
            revealMenuBar.action = #selector(SWRevealViewController.revealToggle(_:))
            view.addGestureRecognizer(revealVC.panGestureRecognizer())
        }
    }
    
    // MARK: Table view setup

    var characters: Dictionary<Int, People>? = LocalCache.characters

    override func numberOfSections(in tableView: UITableView) -> Int {
        return 1
    }

    override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return characters?.count ?? 0
    }

    override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        guard let cell = tableView.dequeueReusableCell(withIdentifier: "CharactersTableViewCell") else {
            return UITableViewCell(style: .default, reuseIdentifier: "CharactersTableViewCell")
        }

        let keysArray = Array(characters?.keys ?? Dictionary<Int, People>().keys)
        let character = characters?[keysArray[indexPath.row]]

        cell.textLabel?.text = character?.name

        // test identifiers
        cell.accessibilityIdentifier = character?.name ?? ""
        cell.accessibilityValue = character?.name ?? ""

        return cell
    }

    override func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        Router.routeTo(from: self, to: .CharacterDetails, param: indexPath.row)
    }
}
