//
//  FilmsPresenter.swift
//  Swapi
//
//  Created by TuyenLe on 7/29/19.
//  Copyright (c) 2019 TuyenLe. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import SwiftyJSON

protocol FilmsPresentationLogic {
  func presentFilms(response: Films.Fetch.Response)
}

class FilmsPresenter: FilmsPresentationLogic {
    weak var viewController: FilmsDisplayLogic?
  
    // MARK: Present films

    func presentFilms(response: Films.Fetch.Response) {
        guard let filmsData = response.films else {
            print("Films data is null")
            return
        }
        var filmsArray: [Film] = []
        do {
            let json = try JSON(data: filmsData)
            for film in json["results"] {
                filmsArray.append(Film(title: film.1["title"].string!,
                                       episode: film.1["episode_id"].int!,
                                       openingCrawl: film.1["opening_crawl"].string!,
                                       director: film.1["director"].string!,
                                       producer: film.1["producer"].string!,
                                       releaseDate: film.1["release_date"].string!,
                                       characters: nil,
                                       planets: nil,
                                       starships: nil,
                                       species: nil,
                                       created: film.1["created"].string!,
                                       edited: film.1["edited"].string!))
            }
            viewController?.displayFilms(viewModel: Films.Fetch.ViewModel(films: filmsArray))
        } catch let error {
            print("Error parsing films Json: ", error)
        }
    }
}
