//
//  LaunchScreenInteractor.swift
//  Swapi
//
//  Created by TuyenLe on 7/30/19.
//  Copyright (c) 2019 TuyenLe. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol LaunchScreenBusinessLogic
{
    func preFetchCharacters(request: LaunchScreen.Fetch.Request)
    func preFetchFilms()
    func preFetchPlanets(request: LaunchScreen.Fetch.Request)
    func preFetchSpecies(request: LaunchScreen.Fetch.Request)
    func preFetchStarships(request: LaunchScreen.Fetch.Request)
    func preFetchVehicles(request: LaunchScreen.Fetch.Request)
}

protocol LaunchScreenDataStore
{

}

class LaunchScreenInteractor: LaunchScreenBusinessLogic, LaunchScreenDataStore
{
    var presenter: LaunchScreenPresentationLogic?
    var worker: LaunchScreenWorker? = LaunchScreenWorker(category: CategoryProtocolImplementation())

    // MARK: Prefetch

    func preFetchCharacters(request: LaunchScreen.Fetch.Request) {
        worker?.preFetchCharacters(request: request) { (datas: [Data?]) in
            self.presenter?.cachCharacters(response: LaunchScreen.Fetch.Response.People(people: datas))
        }
    }

    func preFetchFilms() {
        worker?.preFetchFilms { (data: Data?) in
            self.presenter?.cachFilms(response: LaunchScreen.Fetch.Response.Films(films: data))
        }
    }

    func preFetchPlanets(request: LaunchScreen.Fetch.Request) {
        worker?.preFetchPlanets(request: request) { (datas: [Data?]) in
            self.presenter?.cachPlanets(response: LaunchScreen.Fetch.Response.Planets(planets: datas))
        }
    }

    func preFetchSpecies(request: LaunchScreen.Fetch.Request) {
        worker?.preFetchSpecies(request: request) { (datas: [Data?]) in
            self.presenter?.cachSpecies(respones: LaunchScreen.Fetch.Response.Species(species: datas))
        }
    }

    func preFetchStarships(request: LaunchScreen.Fetch.Request) {
        worker?.preFetchStarships(request: request) { (datas: [Data?]) in
            self.presenter?.cachStarships(response: LaunchScreen.Fetch.Response.Starships(starships: datas))
        }
    }

    func preFetchVehicles(request: LaunchScreen.Fetch.Request) {
        worker?.preFetchVehicles(request: request) { (datas: [Data?]) in
            self.presenter?.cachVehicles(response: LaunchScreen.Fetch.Response.Vehicles(vehicles: datas))
        }
    }
  
}
