//
//  LaunchScreenWorker.swift
//  Swapi
//
//  Created by TuyenLe on 7/30/19.
//  Copyright (c) 2019 TuyenLe. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

class LaunchScreenWorker
{
    var category: CategoryProtocol

    init(category: CategoryProtocol) {
        self.category = category
    }

    func preFetchCharacters(request: LaunchScreen.Fetch.Request, completion: @escaping ([Data?]) -> Void) {
        category.getCharacters(request.sequence) { (datas: [Data?]) in
            completion(datas)
        }
    }

    func preFetchFilms(completion: @escaping (Data?) -> Void) {
        category.getFilms{ (films: () throws -> Data?) -> Void in
            do {
                let data = try films()
                completion(data)
            } catch let error {
                print(error)
                completion(nil)
            }
        }
    }

    func preFetchPlanets(request: LaunchScreen.Fetch.Request, completion: @escaping ([Data?]) -> Void) {
        category.getPlanets(request.sequence) { (datas: [Data?]) in
            completion(datas)
        }
    }

    func preFetchSpecies(request: LaunchScreen.Fetch.Request, completion: @escaping ([Data?]) -> Void) {
        category.getSpecies(request.sequence) { (datas: [Data?]) in
            completion(datas)
        }
    }

    func preFetchStarships(request: LaunchScreen.Fetch.Request, completion: @escaping ([Data?]) -> Void) {
        category.getStarships(request.sequence) { (datas: [Data?]) in
            completion(datas)
        }
    }

    func preFetchVehicles(request: LaunchScreen.Fetch.Request, completion: @escaping ([Data?]) -> Void) {
        category.getVehicles(request.sequence) { (datas: [Data?]) in
            completion(datas)
        }
    }
}
